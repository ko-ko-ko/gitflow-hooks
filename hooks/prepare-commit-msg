#!/bin/bash

HOOKS_PATH=$PWD/$GIT_DIR/hooks
SRC_PATH=$HOOKS_PATH/src

source $HOOKS_PATH/hooks-config.sh
source $SRC_PATH/functions.sh

if ! $PREPARE_COMMIT_MSG_ENABLED ; then
    exit 0
fi

COMMIT_MESSAGE_FILE=$1
COMMIT_MESSAGE_TYPE=$2
COMMIT_MESSAGE_TEXT=""
COMMIT_MESSAGE_DEFAULT_TEXT=$(cat $COMMIT_MESSAGE_FILE)

CURRENT_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
CURRENT_BRANCH_TYPE=""
CURRENT_BRANCH_DATE=""
CURRENT_BRANCH_AUTHOR=""
CURRENT_BRANCH_ISSUE=""
CURRENT_BRANCH_DESCRIPTION=""

GIT_AUTHOR_NAME=$(git config user.name)
GIT_AUTHOR_EMAIL=$(git config user.email)

function make_commit_message() {
    parse_branch_name $CURRENT_BRANCH_NAME

    CURRENT_BRANCH_TYPE=$BRANCH_TYPE
    CURRENT_BRANCH_DATE=$BRANCH_DATE
    CURRENT_BRANCH_AUTHOR=$BRANCH_AUTHOR
    CURRENT_BRANCH_ISSUE=$BRANCH_ISSUE
    CURRENT_BRANCH_DESCRIPTION=$BRANCH_DESCRIPTION

    local path=$SRC_PATH/$COMMIT_MESSAGE_TYPE.tpl

    render_template $path $COMMIT_MESSAGE_FILE
}

case $COMMIT_MESSAGE_TYPE in
    message )
        if ! [[ $COMMIT_MESSAGE_FILE == ".git/MERGE_MSG" ]] ; then
            exit 0
        fi

        COMMIT_MESSAGE_TYPE="message"
        make_commit_message
        ;;
    template )
        echo "Commit templates not allowed"
        exit 1
        ;;
    merge )
        exit 0
        ;;
    squash )
        exit 0
        ;;
    * )
        COMMIT_MESSAGE_TYPE="commit"
        make_commit_message
        ;;
esac