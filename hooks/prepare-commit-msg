#!/bin/bash

HOOKS_PATH=$PWD/$GIT_DIR/hooks

COMMIT_MESSAGE_FILE=$1
COMMIT_MESSAGE_TYPE=$2
COMMIT_MESSAGE_TEXT=""
COMMIT_MESSAGE_DEFAULT_TEXT=$(cat $COMMIT_MESSAGE_FILE)

CURRENT_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
CURRENT_BRANCH_TYPE=""
CURRENT_BRANCH_DATE=""
CURRENT_BRANCH_AUTHOR=""
CURRENT_BRANCH_ISSUE=""
CURRENT_BRANCH_DESCRIPTION=""

MERGE_BRANCH_NAME=""
MERGE_BRANCH_TYPE=""
MERGE_BRANCH_DATE=""
MERGE_BRANCH_AUTHOR=""
MERGE_BRANCH_ISSUE=""
MERGE_BRANCH_DESCRIPTION=""

GIT_AUTHOR_NAME=$(git config user.name)
GIT_AUTHOR_EMAIL=$(git config user.email)

function parse_branch_name() {
    local pattern="^(feature|hotfix|release)/([0-9]{8})-([a-z]+)-([0-9]+)-(.+)$"

    if ! [[ $1 =~ $pattern ]] ; then
        echo "Branch name not apply pattern:"
        echo $1

        exit 1
    fi

    _BRANCH_TYPE=${BASH_REMATCH[1]}
    _BRANCH_DATE=${BASH_REMATCH[2]}
    _BRANCH_AUTHOR=${BASH_REMATCH[3]}
    _BRANCH_ISSUE=${BASH_REMATCH[4]}

    local description=${BASH_REMATCH[5]}

    _BRANCH_DESCRIPTION=${description//-/ }
}

function build_message() {
    eval "cat <<EOF
$(<$1)
EOF
" 2> /dev/null
}

function save_message() {
    local path=$HOOKS_PATH/templates/$COMMIT_MESSAGE_TYPE.txt

    build_message $path | cat > $COMMIT_MESSAGE_FILE
}

function make_commit_message() {

    parse_branch_name $CURRENT_BRANCH_NAME

    CURRENT_BRANCH_TYPE=$_BRANCH_TYPE
    CURRENT_BRANCH_DATE=$_BRANCH_DATE
    CURRENT_BRANCH_AUTHOR=$_BRANCH_AUTHOR
    CURRENT_BRANCH_ISSUE=$_BRANCH_ISSUE
    CURRENT_BRANCH_DESCRIPTION=$_BRANCH_DESCRIPTION

    save_message
}

case $COMMIT_MESSAGE_TYPE in
    message )
        COMMIT_MESSAGE_TYPE="message"
        make_commit_message
        ;;
    template )
        echo "Commit templates not allowed"
        exit 1
        ;;
    merge )
        echo "merge commit message not implemented now"
        exit 1
        ;;
    squash )
        echo "squash commit message not implemented now"
        exit 1
        ;;
    * )
        COMMIT_MESSAGE_TYPE="commit"
        make_commit_message
        ;;
esac